# Name of this NanoBSD build.  (Used to construct workdir names)
NANO_NAME=full

# Source tree directory
NANO_SRC=/usr/src

# Where cust_pkg() finds packages to install
NANO_PACKAGE_DIR=${NANO_TOOLS}/${NANO_TARGET}/packages
NANO_PACKAGE_LIST="*"

# Object tree directory
# default is subdir of /usr/obj
#NANO_OBJ=""

# The directory to put the final images
# default is ${NANO_OBJ}
#NANO_DISKIMGDIR=""

# Parallel Make
NANO_PMAKE="make -j 3"

# The default name for any image we create.
NANO_IMGNAME="_.disk.full"

# Kernel config file to use
# If this file exists in targets/${NANO_TARGET}/${NANO_ARCH} then it
#  will be copied 
NANO_KERNEL=GENERIC

# Kernel modules to build; default is none
NANO_MODULES=

# Customize commands.
NANO_CUSTOMIZE=""

# Late customize commands.
NANO_LATE_CUSTOMIZE=""

# Last Orders commands.
NANO_LAST_ORDERS=""

# Newfs paramters to use
NANO_NEWFS="-b 4096 -f 512 -i 8192 -O1 -U"

# The drive name of the media at runtime
# This value is not used if NANO_LABEL is used
#NANO_DRIVE=ad0

# Target media size in 512 bytes sectors
NANO_MEDIASIZE=$(( 1000 * 1000 * 1000 / 512 ))

# Number of code images on media (1 or 2)
NANO_IMAGES=2

# 0 -> Leave second image all zeroes so it compresses better.
# 1 -> Initialize second image with a copy of the first
NANO_INIT_IMG2=1

# Size of code file system in 512 bytes sectors
# If zero, size will be as large as possible.
NANO_CODESIZE=0

# Size of configuration file system in 512 bytes sectors
# Cannot be zero.
NANO_CONFSIZE=2048

# Size of data file system in 512 bytes sectors
# If zero: no partition configured.
# If negative: max size possible
NANO_DATASIZE=0

# Size of the /etc ramdisk in 512 bytes sectors
NANO_RAM_ETCSIZE=10240

# Size of the /tmp+/var ramdisk in 512 bytes sectors
NANO_RAM_TMPVARSIZE=10240

# Media geometry, only relevant if bios doesn't understand LBA.
NANO_SECTS=63
NANO_HEADS=16

# boot0 flags/options and configuration
NANO_BOOT0CFG="-o packet -s 1 -m 3"
NANO_BOOTLOADER="boot/boot0sio"

# boot2 flags/options
# default force serial console
NANO_BOOT2CFG=" -h"

# Backing type of md(4) device
# Can be "file" or "swap"
NANO_MD_BACKING="file"

# for swap type md(4) backing, write out the mbr only
NANO_IMAGE_MBRONLY=true

# Set NANO_LABEL to non-blank to form the basis for using /dev/ufs/label
# in preference to /dev/${NANO_DRIVE}
# Root partition will be ${NANO_LABEL}s{1,2}
# /cfg partition will be ${NANO_LABEL}s3
# /data partition will be ${NANO_LABEL}s4
NANO_LABEL="nanobsd"

# Directory to populate /cfg from
NANO_CFGDIR=${NANO_TOOLS}/targets/${NANO_TARGET}/cfg

# Directory to populate /data from
NANO_DATADIR=${NANO_TOOLS}/${NANO_TARGET}/data

## Define the image type, acceptable types are disk and cd.
NANO_IMAGE_TYPE="disk"

## Speed to enable the serial console at.
NANO_CONSOLE_SPEED="9600"

# Progress Print level
PPLEVEL=3

